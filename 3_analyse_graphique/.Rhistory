View(data)
data %>% count(elu)
data %>% add_tally(elu)
data %>% add_tally()
View(data %>% add_tally())
View(data %>% group_by(liste) %>% add_tally())
View(data %>% group_by(liste) %>% filter(elu=="oui") %>% add_tally())
?add_tally
data %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n)
View(data %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n))
View(data %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n) %>%
filter(position_moins_elus > 0))
View(data %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n) %>%
filter(position_moins_elus > 0) %>%
arrange(desc(position_moins_elus), desc(place_positionelu)))
View(data_filtered %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n) %>%
filter(position_moins_elus > 0) %>%
arrange(desc(position_moins_elus), desc(place_positionelu)))
result =
data_filtered %>%
group_by(liste) %>%
filter(elu=="oui") %>%
add_tally() %>%
mutate(position_moins_elus = place_liste - n) %>%
filter(position_moins_elus > 0) %>%
arrange(desc(place_positionelu), desc(position_moins_elus))
View(result)
# Start the clock!
start_time <- Sys.time()
library(rvest)
library(dplyr)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
#ce qui vous évitera des chipotages
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
start_url = "http://bru2012.irisnet.be/fr/com/results/results_start.html"
url_communes =
start_url %>%
read_html() %>%
html_nodes(".normal a") %>%
html_attr("href") %>%
paste0("http://bru2012.irisnet.be/fr/com/results/", .)
listes = vector()
for (i in url_communes) {
urls = i %>%
read_html() %>%
html_nodes(xpath = "//a[contains(@href,'../preferred/preferred_CGM')]") %>%
html_attr("href") %>%
gsub("../preferred/", "/preferred/", .) %>%
paste0("http://bru2012.irisnet.be/fr/com", .)
listes = c(listes, urls)
}
tables = vector()
for (i in listes) {
html = i %>%
read_html()
table = html %>%
html_node("#wrn_background_Id") %>%
html_table(header = FALSE,
fill = TRUE,
dec = ",")
#on cr?e trois colonnes avec le nom de la commune, le nom de la liste et l'URL de la page
table$commune = html %>% html_node(".uppercaseb") %>% html_text()
table$parti = html %>% html_node(".subtitle") %>% html_text()
table$lien = i
tables = rbind(tables, table)
}
tables = tables %>% drop_na(X2) %>% select(X2:X10, commune:lien)
colnames(tables) = c(
"place_liste",
"nom",
"voix",
"pourcent_liste",
"voix_devolues",
"voix_apres_devolution",
"voix_restantes",
"position_elu",
"position_suppleance",
"commune",
"parti",
"lien"
)
tables$pourcent_liste = as.numeric(gsub("^([0-9]+),?([0-9]+)?%", "\\1.\\2", tables$pourcent_liste))
tables$commune = gsub("Commune de ", "", trimws(tables$commune))
# Stop the clock
Sys.time() - start_time
write_csv(tables, "scraping_bruxelles.csv")
table
View(tables)
# Start the clock!
start_time <- Sys.time()
library(rvest)
library(dplyr)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
#ce qui vous évitera des chipotages
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
start_url = "http://bru2012.irisnet.be/fr/com/results/results_start.html"
url_communes =
start_url %>%
read_html() %>%
html_nodes(".normal a") %>%
html_attr("href") %>%
paste0("http://bru2012.irisnet.be/fr/com/results/", .)
listes = vector()
for (i in url_communes) {
urls = i %>%
read_html() %>%
html_nodes(xpath = "//a[contains(@href,'../preferred/preferred_CGM')]") %>%
html_attr("href") %>%
gsub("../preferred/", "/preferred/", .) %>%
paste0("http://bru2012.irisnet.be/fr/com", .)
listes = c(listes, urls)
}
tables = vector()
for (i in listes) {
html = i %>%
read_html()
table = html %>%
html_node("#wrn_background_Id") %>%
html_table(header = FALSE,
fill = TRUE,
dec = ",")
#on cr?e trois colonnes avec le nom de la commune, le nom de la liste et l'URL de la page
table$commune = html %>% html_node(".uppercaseb") %>% html_text()
table$parti = html %>% html_node(".subtitle") %>% html_text()
table$lien = i
tables = rbind(tables, table)
}
tables = tables %>% drop_na(X2) %>% select(X2:X10, commune:lien)
colnames(tables) = c(
"place_liste",
"nom",
"voix",
"pourcent_liste",
"voix_devolues",
"voix_apres_devolution",
"voix_restantes",
"position_elu",
"position_suppleance",
"commune",
"parti",
"lien"
)
tables$pourcent_liste = as.numeric(gsub("^([0-9]+),?([0-9]+)?%", "\\1.\\2", tables$pourcent_liste))
tables$commune = gsub("Commune de ", "", trimws(tables$commune))
# Stop the clock
Sys.time() - start_time
write_csv(tables, "scraping_bruxelles.csv")
View(tables)
# Start the clock!
start_time <- Sys.time()
library(rvest)
library(dplyr)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
#ce qui vous évitera des chipotages
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
start_url = "http://bru2012.irisnet.be/fr/com/results/results_start.html"
url_communes =
start_url %>%
read_html() %>%
html_nodes(".normal a") %>%
html_attr("href") %>%
paste0("http://bru2012.irisnet.be/fr/com/results/", .)
listes = vector()
for (i in url_communes) {
urls = i %>%
read_html() %>%
html_nodes(xpath = "//a[contains(@href,'../preferred/preferred_CGM')]") %>%
html_attr("href") %>%
gsub("../preferred/", "/preferred/", .) %>%
paste0("http://bru2012.irisnet.be/fr/com", .)
listes = c(listes, urls)
}
tables = vector()
for (i in listes) {
html = i %>%
read_html()
table = html %>%
html_node("#wrn_background_Id") %>%
html_table(header = FALSE,
fill = TRUE,
dec = ",")
#on cr?e trois colonnes avec le nom de la commune, le nom de la liste et l'URL de la page
table$commune = html %>% html_node(".uppercaseb") %>% html_text()
table$parti = html %>% html_node(".subtitle") %>% html_text()
table$lien = i
tables = rbind(tables, table)
}
View(tables)
tables = tables %>% drop_na(X2) %>% select(X2:X10, commune:lien)
# Start the clock!
start_time <- Sys.time()
library(rvest)
library(tidyverse)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
#ce qui vous évitera des chipotages
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
start_url = "http://bru2012.irisnet.be/fr/com/results/results_start.html"
url_communes =
start_url %>%
read_html() %>%
html_nodes(".normal a") %>%
html_attr("href") %>%
paste0("http://bru2012.irisnet.be/fr/com/results/", .)
listes = vector()
for (i in url_communes) {
urls = i %>%
read_html() %>%
html_nodes(xpath = "//a[contains(@href,'../preferred/preferred_CGM')]") %>%
html_attr("href") %>%
gsub("../preferred/", "/preferred/", .) %>%
paste0("http://bru2012.irisnet.be/fr/com", .)
listes = c(listes, urls)
}
tables = vector()
for (i in listes) {
html = i %>%
read_html()
table = html %>%
html_node("#wrn_background_Id") %>%
html_table(header = FALSE,
fill = TRUE,
dec = ",")
#on cr?e trois colonnes avec le nom de la commune, le nom de la liste et l'URL de la page
table$commune = html %>% html_node(".uppercaseb") %>% html_text()
table$parti = html %>% html_node(".subtitle") %>% html_text()
table$lien = i
tables = rbind(tables, table)
}
tables = tables %>% drop_na(X2) %>% select(X2:X10, commune:lien)
colnames(tables) = c(
"place_liste",
"nom",
"voix",
"pourcent_liste",
"voix_devolues",
"voix_apres_devolution",
"voix_restantes",
"position_elu",
"position_suppleance",
"commune",
"parti",
"lien"
)
tables$pourcent_liste = as.numeric(gsub("^([0-9]+),?([0-9]+)?%", "\\1.\\2", tables$pourcent_liste))
tables$commune = gsub("Commune de ", "", trimws(tables$commune))
# Stop the clock
Sys.time() - start_time
write_csv(tables, "scraping_bruxelles.csv")
library(dplyr)
library(readr)
library(ggplot2)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe et visualise le fichier csv issu des scraping
data = read_csv("scrapings_wallonie_bruxelles.csv")
View(data)
library(dplyr)
library(readr)
library(ggplot2)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe et visualise le fichier csv issu des scraping
data = read_csv("scrapings_wallonie_bruxelles.csv")
View(data)
library(rvest) #à installer d'abord si ce n'est fait
library(readr) #à installer d'abord si ce n'est fait
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
#cela vous évitera de devoir chipoter
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe la liste de liens récupérés à l'aide de web scraper chrome
liens_listes_wallonie_bruxelles <-
read_csv("../data/liens_listes_wallonie_bruxelles.csv")
#on jette un oeil sur le dataframe
View(liens_listes_wallonie_bruxelles)
listes = liens_listes_wallonie_bruxelles$liens
tables = vector()
for (i in listes) {
html = i %>%
read_html()
table = html %>%
#ATTENTION au html_node et pas nodes !
html_node("#wrn_background_Id") %>%
html_table(header = FALSE,
fill = TRUE,
dec = ",")
#on cree trois colonnes avec le nom de la commune, le nom de la liste et l'URL de la page
table$commune = html %>% html_node(".uppercaseb") %>% html_text()
table$parti = html %>% html_node(".subtitle") %>% html_text()
table$lien = i
#On n'oublie surtout pas de fusionner chaque table avec la liste tables
tables = rbind(tables, table)
}
#on nettoye un peu lignes et colonnes superflues (pourrait se faire dans OpenRefine)
tables = tables %>% drop_na(X2) %>% select(X2:X10, commune:lien)
#On renomme les colonnes (pourrait se faire dans OpenRefine voire dans le csv)
colnames(tables) = c(
"place_liste",
"nom",
"voix",
"pourcent_liste",
"voix_devolues",
"voix_apres_devolution",
"voix_restantes",
"position_elu",
"position_suppleance",
"commune",
"parti",
"lien"
)
#on visualise le tableau (même chose que de cliquer sur son nom dans le volet)
View(tables)
#On sauvegarde dans un fichier cv
write_csv(tables, "scraping_wallonie_bruxelles.csv")
View(data)
tables$commune = gsub("Commune de ", "", trimws(tables$commune))
#On sauvegarde dans un fichier cv
write_csv(tables, "scraping_wallonie_bruxelles.csv")
library(dplyr)
library(readr)
library(ggplot2)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe et visualise le fichier csv issu des scraping
data = read_csv("scrapings_wallonie_bruxelles.csv")
View(data)
#ajouter une colonne avec le nombre de voix du dernier élu
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]))
library(dplyr)
library(readr)
library(ggplot2)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe et visualise le fichier csv issu des scraping
data = read_csv("scrapings_wallonie_bruxelles.csv")
View(data)
#ajouter une colonne avec le nombre de voix du dernier élu
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]))
library(dplyr)
library(readr)
library(ggplot2)
#ne faite pas attention à ces lignes de code
#elles servent à définir automatiquement votre
#répertoire de travail dans le bon dossier
set_wd <- function() {
library(rstudioapi) # à installer au besoin
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd()
#On importe et visualise le fichier csv issu des scraping
data = read_csv("scrapings_wallonie_bruxelles.csv")
View(data)
#ajouter une colonne avec le nombre de voix du dernier élu
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]))
View(rate_lelection)
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu)
View(rate_lelection)
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu) %>%
filter(elu=="non") %>%
arrange(difference)
View(rate_lelection)
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu) %>%
filter(elu=="non", difference>0) %>%
arrange(difference)
View(rate_lelection)
#ajouter une colonne avec le nombre de voix du dernier élu
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu) %>%
filter(elu=="non", difference>0) %>%
arrange(desc(difference))
View(rate_lelection)
#ajouter une colonne avec le nombre de voix du dernier élu
#calculer la différence entre cette colonne et le nombre de voix des premiers suppléants
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu) %>%
filter(elu=="non", difference>0) %>%
arrange(difference)
View(rate_lelection)
voix_last_elu = min(voix[which(elu=="oui")
voix_last_elu = min(voix[which(elu=="oui")]
rate_lelection =
data %>%
group_by(liste) %>%
mutate(voix_last_elu = min(voix[which(elu=="oui")]),
difference = voix - voix_last_elu) %>%
filter(elu=="non", difference==-1)
View(rate_lelection)
